import {
  BookOutlined,
  CheckCircleOutlined,
  CheckOutlined,
  CloudOutlined,
  CommentOutlined,
  HddOutlined,
  IdcardOutlined,
  LayoutOutlined,
  SafetyCertificateOutlined,
  StarOutlined,
} from "@ant-design/icons";
import styles from "./PaymentPage.module.css";
import OrderModal from "./OrderModal";

import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import {
  fetchCourseIDGraphQL,
  fetchListChilByID,
} from "../../redux/slices/courseSlice";
import { getCourseByIdSelector } from "../../redux/selectors";
import { useDispatch, useSelector } from "react-redux";
import { Select, Spin } from "antd";
import { formatPrice, increaseBy40Percent } from "../../utils";
import { payCourse } from "../../redux/slices/transactionSlice";
import { toast } from "react-toastify";

export const PaymentPage = () => {
  const [isModalVisible, setModalVisible] = useState(false);
  const userLocal = JSON.parse(localStorage.getItem("user"));
  const { id } = useParams();
  const dispatch = useDispatch();
  const [listChildren, setListChildren] = useState([]);
  const [infoPayment, setInfoPayment] = useState("ninh");
  const [selectedOption, setSelectedOption] = useState(null);

  console.log(userLocal.id);
  console.log(id);
  const courseDetail = useSelector(getCourseByIdSelector);
  useEffect(() => {
    dispatch(fetchCourseIDGraphQL(id));
    dispatch(fetchListChilByID(userLocal.id)).then((res) => {
      setListChildren(res.payload.getListChildrenByParentId);
    });
  }, [dispatch, id]);

  const handleOpenModal = () => {
    if (!selectedOption) {
      toast.warning("Ch·ªçn h·ªçc sinh ƒë·ªÉ tham gia kh√≥a h·ªçc");
      return;
    }
    dispatch(payCourse({ courseId: id, childrenId: selectedOption })).then(
      (res) => {
        setInfoPayment(res.data);
        // if (!res.data) return toast.info("H√£y thanh to√°n ƒë∆°n c≈©");
        console.log("info payment: " + res.data);
        toast.info("H√£y thanh to√°n ƒë·ªÉ s·ªü h·ªØu");
        setModalVisible(true);
      }
    );
  };

  console.log("courseDetail", courseDetail);
  if (!courseDetail)
    return (
      <div style={{ textAlign: "center" }}>
        <Spin size="large" />
      </div>
    );

  const handleCloseModal = () => {
    setModalVisible(false);
  };

  const handleSelectChange = (value) => {
    setSelectedOption(value);
  };
  return (
    <div className={styles.payment_wrapper}>
      <div>
        <h1 className={styles.payment_title}>M·ªü kh√≥a to√†n b·ªô kh√≥a h·ªçc</h1>
        <div className={styles.paymentContent_wrapper}>
          <div className={styles.paymentContent_left}>
            <div className={styles.paymentContent_description}>
              <p>
                S·ªü h·ªØu kh√≥a h·ªçc{" "}
                <em>
                  <strong>{courseDetail.title}</strong>
                </em>{" "}
                nh·∫•t b·∫°n c√≥ th·ªÉ t√¨m th·∫•y tr√™n Internet üôå
              </p>
              <p>
                C√≥ t·ªõi{" "}
                <em>
                  <strong>h√†ng ch·ª•c b√†i t·∫≠p</strong>
                </em>{" "}
                th·ª±c h√†nh sau m·ªói b√†i h·ªçc v√† b·∫°n s·∫Ω ƒë∆∞·ª£c (bao g·ªìm video, b√†i
                t·∫≠p, th·ª≠ th√°ch, flashcards, v.v) s·∫Ω gi√∫p b·∫°n n·∫Øm ki·∫øn th·ª©c n·ªÅn
                t·∫£ng v√¥ c√πng ch·∫Øc ch·∫Øn.
              </p>
            </div>
            <div className={styles.paymentContent_price}>
              <div className={styles.paymentContent_priceContainer}>
                <span className={styles.paymentContent_priceTitle}>
                  Gi√° b√°n:
                </span>
                <div className={styles.paymentContent_priceWrapper}>
                  <del>
                    {formatPrice(increaseBy40Percent(courseDetail.price))}
                  </del>
                  <span>{formatPrice(courseDetail.price)}ƒë</span>
                </div>
              </div>
              <div className={styles.paymentContent_divider}></div>
              <div className={styles.paymentContent_priceContainer}>
                <span className={styles.paymentContent_totalPrice}>
                  T·ªïng ti·ªÅn:
                </span>
                <div className={styles.paymentContent_priceFinal}>
                  <span>{formatPrice(courseDetail.price)}ƒë</span>
                </div>
              </div>
            </div>

            <div className={styles.payment_getInfoPayment}>
              <a className={styles.btnWrapper} onClick={handleOpenModal}>
                L·∫•y th√¥ng tin thanh to√°n
              </a>
            </div>
          </div>
          <div className={styles.paymentContent_right}>
            <h2
              className={styles.paymentContent_benefitTitle}
              style={{ color: "black", margin: 0 }}
            >
              Ch·ªçn h·ªçc sinh ƒë·ªÉ tham gia kh√≥a h·ªçc
            </h2>
            <Select
              defaultValue="Select an option"
              value={selectedOption}
              onChange={handleSelectChange}
              style={{ width: "100%", margin: "10px 0" }}
              allowClear="true"
              placeholder="Ch·ªçn h·ªçc sinh"
            >
              {listChildren.map((child) => (
                <Option value={child.id}>{child.name}</Option>
              ))}
            </Select>
            <div className={styles.paymentContent_benefit}>
              <div className={styles.paymentContent_benefitWrapper}>
                <h2 className={styles.paymentContent_benefitTitle}>
                  B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c g√¨?
                </h2>
                <section>
                  <section>
                    <div className={styles.paymentContent_benefitItem}>
                      <span className={styles.paymentContent_icon}>
                        <CheckCircleOutlined />
                      </span>
                      <div>
                        Truy c·∫≠p to√†n b·ªô kh√≥a{" "}
                        <strong>{courseDetail.title}</strong>
                      </div>
                    </div>
                    <div className={styles.paymentContent_benefitItem}>
                      <span className={styles.paymentContent_icon}>
                        <HddOutlined />
                      </span>
                      <div>
                        H√†ng <strong>ch·ª•c</strong> b√†i h·ªçc
                      </div>
                    </div>

                    <div className={styles.paymentContent_benefitItem}>
                      <span className={styles.paymentContent_icon}>
                        <CommentOutlined />
                      </span>
                      <div>K√™nh h·ªèi ƒë√°p, h·ªó tr·ª£</div>
                    </div>
                    <div className={styles.paymentContent_benefitItem}>
                      <span className={styles.paymentContent_icon}>
                        <CheckOutlined />
                      </span>
                      <div>ƒê√°p √°n cho m·ªçi th·ª≠ th√°ch</div>
                    </div>
                    <div className={styles.paymentContent_benefitItem}>
                      <span className={styles.paymentContent_icon}>
                        <SafetyCertificateOutlined />
                      </span>
                      <div>Nh·∫≠n ch·ª©ng ch·ªâ khi ho√†n th√†nh</div>
                    </div>
                  </section>
                </section>
              </div>
            </div>
          </div>
        </div>
      </div>
      {isModalVisible && (
        <OrderModal infoPayment={infoPayment} onClose={handleCloseModal} />
      )}
    </div>
  );
};
